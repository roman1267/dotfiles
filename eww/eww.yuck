;;########################
;;# Variable Definitions #
;;########################

(deflisten workspaces :initial "1"
  `tail -f /tmp/hypr_sockets/active_ws`)

(deflisten special_workspaces :initial "0"
  `tail -f /tmp/hypr_sockets/special_ws`)

(deflisten submap_from_file :initial ""
  `tail -f /tmp/hypr_sockets/active_submap`)

;; (defvar foo_test "(box (button :css 'button {color: red;}' 'foo'))")

;;######################
;;# Widget Definitions #
;;######################

(defwidget bar []
  (box :halign "start" :space-evenly false
       (workspace)
       (special_workspace)
       ;; FIXME: Non-functional
       ;; (submap)
       (cputemp)
       (time_date)
  )
)

(defwidget workspace []
           (literal :content workspaces)
)

;; TODO: Make functional
(defwidget special_workspace []
  (literal :content special_workspaces)
)

(defwidget submap [] 
           (literal :content submap_from_file)
)

(defwidget cputemp []
           ;; NOTE: Example of syntax for accessing values. EWW_TEMPS gives the entire array of possible values for debugging
           (button "core 1 temp: ${EWW_TEMPS.CORETEMP_CORE_1}")
)

(defwidget time_date [] "${formattime(EWW_TIME,"%R %D")}")
;; TODO: 
(defwidget weather [] "foo")
;; TODO: 
(defwidget backlight [] "foo")
;; TODO: 
(defwidget audio_volume [] "foo")
;; TODO: 
(defwidget cpu_usage [] "foo")
;; TODO: 
(defwidget ram_usage [] "foo")
;; TODO: 
(defwidget network_info [] "foo")
;; TODO: 
(defwidget clipboard_manager [] "foo")
;; TODO: 
(defwidget idle_inhibitor [] "foo")

;; NOTE: Future feature: (defwidget system_tray [] "foo")

;;######################
;;# Window Definitions #
;;######################

(defwindow example
  :monitor 0
  :geometry (geometry :x "0%"
    :y "0px"
    :width "100%"
    :height "30px"
    :anchor "top center")
  :stacking "fg"
  :reserve (struts :distance "40px" :side "bottom")
  :windowtype "dock"
  :exclusive true
  :focusable false
  :wm-ignore false
  (bar)
)
